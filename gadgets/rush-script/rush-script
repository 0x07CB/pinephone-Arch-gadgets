#!/bin/bash

echo "RushScript - (v1.0.2)"
echo "By Rick Sanchez"
echo "------"

sauvegarder(){
	mkdir -p ~/.rush-script/saves/
	mv $1 ~/.rush-script/saves/$1
}

installer(){
	sudo cp $1 /usr/bin/$1
	sudo chmod a+x /usr/bin/$1
	sauvegarder $1
}

executer(){
	chmod a+x $1
	./$1
}

execinstall(){
	sudo cp $1 /usr/bin/$1
	sudo chmod a+x /usr/bin/$1
	chmod a+x $1
	./$1
	sauvegarder $1
}

edition(){

	# choix de l'editeur
	if [ -z	"$2" ]
	then
		echo "vim sera utiliser comme éditeur par defaut."
		vim $1
	else
		$2 $1
	fi	
	
	
	# verification si le fichier existe après et poursuite des operations demander par un choix
	if [ -f $1 ]
	then
		echo "Que shouaitez vous faire du fichier $1 ?"
		echo "Vous pouvez faire plusieurs choses."
		echo "----------"
		echo "s : sauvegarder(sauvegarde seulement sans changement de permission)"
		echo "x : executer(change avec la permission a+x)"
		echo "i : installer(/usr/bin et changement a+x sans execution)"
		echo "z : installer et executer(/usr/bin et a+x avec execution)"
		echo "q : Quitter et ne rien faire de plus"
		echo "----------"
		echo "Note: Toute installation deplace egalement vers le repertoire '~/.rush-script/saves/' le programme," 
		echo "      mais cela ne creer pas de liens symboliques"
		read -p "Inserez une lettre pour votre choix: (s / x / i / z / q)" choice
		case $choice in
  			s) sauvegarder $1 ;;
  			x) executer $1 ;;
			i) installer $1 ;;
  			z) execinstall $1 ;;
			q) exit 0 ;;
  			*) echo "Choix incorrect: $choice" ;;
		esac  
	else
		echo "Le fichier n'existe pas, vous avez certainement pas enregistrer ou changer le nom du fichier a la sauvegarde."
		echo "Annulation de l'execution. Execution impossible."
		exit -2
	fi
}

usage(){
	echo "USAGE: rush-script FILEPATH [EDITOR]"
	echo "EXEMPLE: rush-script test.sh nano"
}

verif_args_1(){
	if [ -z "$1" ] ; then
		echo "Nom de fichier requis en argument, pas de nom de script inscrit, ne peut fonctionner !"
		usage
		exit -1
	elif [ "$1" == "-h" ] ; then
		usage
		exit 0
	fi

	if [ $# -eq 1 ] ; then
		edition $1
	elif [ $# -eq 2 ] ; then
		edition $1 $2
	elif [ $# -gt 2 ] ; then 
		echo "Trop d'argument !"
		exit -3
	fi
}

if [ $# -eq 0 ]
then
	echo "aucuns arguments !"
	usage
	exit -1
else
	verif_args_1 $1 $2
fi
